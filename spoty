#! /bin/bash

spotify_tokens_file="$HOME/.config/spotify_token_info.json"
spority_credentials_file="$HOME/.config/spotify_credentials.json"

client_id=$(jq -r '.client_id' $spority_credentials_file 2>/dev/null)
client_secret=$(jq -r '.client_secret' $spority_credentials_file 2>/dev/null)

access_token=$(jq -r '.access_token' $spotify_tokens_file)

obtain_token () {
  port=8082 # you need to set redirect uri like http://localhost:8082/
  redirect_uri=http%3A%2F%2Flocalhost%3A$port%2F
  auth_endpoint=https://accounts.spotify.com/authorize/?response_type=code\&client_id=$client_id\&redirect_uri=$redirect_uri

  scopes="user-library-modify user-read-playback-state playlist-modify-private playlist-modify-public"
  encoded_scopes=$(echo $scopes| tr ' ' '%' | sed s/%/%20/g)
  auth_endpoint=$auth_endpoint\&scope=$encoded_scopes

  xdg-open $auth_endpoint
  response=$(echo -ne "HTTP/1.0 200 OK\r\n\r\n<html><script>open(location, '_self').close();</script></html>" | nc -l -p $port)
  code=$(echo "$response" | grep GET | cut -d' ' -f 2 | cut -d'=' -f 2)

  response=$(curl -s \
    -H "Content-Type:application/x-www-form-urlencoded" \
    -d grant_type=authorization_code \
    -d code=$code \
    -d redirect_uri=$redirect_uri \
    -d client_id=$client_id \
    -d client_secret=$client_secret \
    https://accounts.spotify.com/api/token)

  echo $response | jq > $spotify_tokens_file

  access_token=$(echo $response | jq -r '.access_token')
}

update_token () {
  current_timestamp=$(date +%s) # seconds since the Epoch
  credentials_last_update=$(stat -c '%Y' $spotify_tokens_file)
  expires_in=$(jq -r '.expires_in' $spotify_tokens_file)
  if [[ $current_timestamp-$credentials_last_update -gt $expires_in ]]; then
    refresh_token=$(jq -r '.refresh_token' $spotify_tokens_file)
    response=$(curl -s -X POST \
      -d grant_type=refresh_token \
      -d refresh_token=$refresh_token \
      -d client_id=$client_id \
      -d client_secret=$client_secret \
      https://accounts.spotify.com/api/token)

    new_access_token="$(echo $response | jq -r '.access_token' | sed -e 's/\(.*\)/"\1"/')"
    contents="$(jq ".access_token = $new_access_token" $spotify_tokens_file)"
    echo "${contents}" > $spotify_tokens_file
    access_token=$(echo $response | jq -r '.access_token')
  fi

}

if [[ -z $access_token ]]; then
  obtain_token # token doesn't exist
else
  update_token # token exists; check expiration, update if expired
fi

like_current_track () {
  # get current track id
  track_response=$(curl -s -X GET \
    -H "Accept: application/json" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $access_token" \
    https://api.spotify.com/v1/me/player/currently-playing
  )
  id=$(echo $track_response | jq -r '.item.id')

# like track
curl -s -X PUT \
  -H "Authorization: Bearer $access_token" \
  -H "Content-Type: application/json" \
  --data "{\"ids\": [\"$id\"]}" \
  https://api.spotify.com/v1/me/tracks &> /dev/null

echo "Track liked"
}

add_current_track_to_playlist () {
  # get current track uri
  track_response=$(curl -s -X GET \
    -H "Accept: application/json" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $access_token" \
    https://api.spotify.com/v1/me/player/currently-playing
  )
  uri=$(echo $track_response | jq -r '.item.uri')

# get user id
user_profile_response=$(curl -s -X GET \
  -H "Accept: application/json" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $access_token" \
  https://api.spotify.com/v1/me
)
user_id=$(echo $user_profile_response | jq -r '.id')

user_playlists_response=$(curl -s -X GET \
  -H "Accept: application/json" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $access_token" \
  https://api.spotify.com/v1/users/$user_id/playlists
)
# [{id: 1, name: 'name'}]
playlists=$(echo $user_playlists_response | jq '[.items[] | {id: .id, name: .name}]')
selected_plalist_name="$(echo $playlists | jq -r '.[] .name' | dmenu)"

if [[ -n $selected_plalist_name ]]; then
  # add track to playlist
  playlist_id=$(echo $playlists | jq -r --arg name "$selected_plalist_name" '.[] | select(.name==$name) .id')

# add current track to selected playlist
curl -s -X POST \
  -H "Authorization: Bearer $access_token" \
  -H "Content-Type: application/json" \
  --data "{\"uris\": [\"$uri\"]}" \
  https://api.spotify.com/v1/playlists/$playlist_id/tracks &>/dev/null
  echo "Track added to playlist '$selected_plalist_name'"
fi
}

case $1 in
  like)
    like_current_track
    ;;

  add-to-playlist)
    add_current_track_to_playlist
    like_current_track
    ;;

  *)
    echo -n "unknown command"
    ;;
esac


exit 0
